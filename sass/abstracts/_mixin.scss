@use '../abstracts/variables' as *;


//Function for Font and weight

@mixin font-size($type, $weight) {
    @if ($type == main) {
        font-size: map-get($font-size, $type);
    }

    @if ($weight == normal) {
        font-weight: map-get($font-weight, $weight);
    }

    @if ($type == titleSection) {
        font-size: map-get($font-size, $type);
    }
}

// Mixin for buttons

@mixin button($style) {
    padding: 15px 23px;
    font-size: 1.6rem;
    font-weight: 500;
    text-transform: uppercase;
    transition: 0.2s ease-in;
    @if ($style == option) {
        border: solid 1px var(--light-navy);
        background-color: var(--white);
        color: var(--light-navy);
        cursor: pointer;
        &:hover {
            background-color: var(--light-navy);
            color: var(--white);
        }
    }
    @if ($style == filter) {
        border: solid 1px var(--light-navy);
        background-color: var(--light-navy);
        color: var(--white);
        cursor: pointer;
        border-radius: 0.7rem;
        font-size: 1.2rem;
        &:hover {
            opacity: (0.9);
        }
    }
}
// Component toggle

@mixin toggle {
    .toggle {
        position: relative;
        width: 5.4rem;
        height: 2.2rem;
        background-color: var(--white);
        outline: none;
        appearance: none;
        -moz-appearance: none;
        -webkit-appearance: none;
        border-radius: 10rem;
        box-shadow: inset 0 3px 6px 0 rgba(0, 0, 0, 0.31);
        cursor: pointer;
        transition: 0.3s;

        &::after {
            content: '';
            position: absolute;
            width: 16.8px;
            height: 18.1px;
            border-radius: 5rem;
            top: 0.2rem;
            background-color: var(--grass);
            right: 0.2rem;
            transition: 0.3s;
        }
    }
    .toggle:checked::after {
        right: 3.5rem;
        background-color: var(--greyish);
    }
}

// Item with checkboxes

@mixin items {
    display: flex;
    justify-content: space-between;
    padding: 0.8rem 0;
    border-bottom: 1px solid var(--light-grey);
    margin: 0 0.5rem;
    margin-right: 2rem;
    .optionItem {
        display: none;

        &:checked + label::before {
            background-color: var(--light-navy);
            color: var(--white);
            font-size: 1rem;
        }
    }

    label {
        position: relative;
        color: var(--brownish-grey);
        font-size: 1.3rem;
        width: 60%;
        cursor: pointer;
        &:before {
            content: '\2714';
            border: 2px solid var(--light-navy);
            border-radius: 6rem;
            width: 1.5rem;
            height: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            position: absolute;
            right: -8rem;
            padding: 1px;
            color: transparent;
            transition: 0.2s;
        }
    }
}

//Components Tags

@mixin tags {
    position: relative;
    display: flex;
    align-items: center;
    flex-direction: row;
    box-shadow: 0 3px 16px 0 rgba(0, 0, 0, 0.06);
    background-color: var(--light-grey);
    justify-content: space-evenly;
    padding: 1.03rem 1rem;
    line-height: 1.19;
    font-size: 16px;
    font-weight: 500;
    text-transform: capitalize;
    color: var(--brownish-grey);
    text-align: center;
    span {
        height: 3.4rem;
        border: dashed 1px var(--greyish);
    }
    & > * {
        &:not(:last-child) {
            margin-right: 2rem;
        }
    }
}

//Componet filter special

@mixin filterSpecial{
    background-color: var(--white);
    border: 0;
    outline: 0;
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    display: flex;
    align-items: center;
    justify-content: center;       
    text-transform: uppercase;
    padding: 2rem 4rem;
    font-weight: 500;
}

// Component Dropdown

@mixin dropDown {
    display: flex;
    flex-direction: column;

    .titleFilter {
        background-color: var(--white);
        border: 0;
        outline: 0;
        cursor: pointer;
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        display: flex;
        align-items: center;
        justify-content: center;
        text-transform: uppercase;
        padding: 2rem 4rem;
        font-weight: 500;
        img {
            margin-left: 1.5rem;
        }
    }
    .containerDropDown {
        position: absolute;
        width: 20rem;
        top: 6rem;
        left: 0.5rem;
        background-color: var(--white);
        border: solid 1px var(--pinkish-grey);
        &__content {
            padding: 1rem 0.6rem;
            display: grid;
            grid-template-rows: auto auto auto;
            row-gap: 0.7rem;

            .search {
                display: flex;
                justify-content: space-between;
                padding-bottom: 1.2rem;
                border-bottom: 1px solid var(--light-grey);
                .searchText {
                    font-size: 1.1rem;
                    color: var(--light-navy);
                    text-transform: capitalize;

                    &::placeholder {
                        color: var(--greyish);
                    }
                    &:focus {
                        outline: 0;
                    }
                }
                .searchText,
                button {
                    cursor: pointer;
                    border: 0;
                    background-color: transparent;
                }
            }

            .status {
                margin: 0 0.5rem;
                margin-top: 2rem;
                display: flex;
                flex-direction: column;
                gap: 1rem;
                @include toggle();
                font-size: 13px;
                font-weight: 500;
                letter-spacing: 0.05px;
                text-transform: capitalize;

                &__active,
                &__inactive {
                    display: flex;
                    justify-content: space-between;
                }
            }
            .items {
                display: grid;
                row-gap: 1rem;
                &::-webkit-scrollbar {
                    width: 0.3rem;
                }

                &::-webkit-scrollbar-thumb {
                    background: var(--brownish);
                    border-radius: 1rem;
                }
                height: 14rem;
                overflow-y: scroll;
                overflow-x: hidden;

                &__item {
                    @include items();
                }
            }
        }
        border-radius: 5px;
        box-shadow: 0 3px 14px 0 rgba(0, 0, 0, 0.04);
        display: grid;
        align-content: start;
        height: auto;
        row-gap: 1rem;
        .buttonFilter {
            @include button(filter);
            align-self: end;
        }
    }
}

// Component filter TOP

@mixin filterTop {
    display: grid;
    grid-template-columns: repeat(4, auto) 1fr;
    justify-items: center;
    & > * {
        &:not(:last-child) {
            border-right: solid 2px var(--pinkish-grey);
        }
    }
}
